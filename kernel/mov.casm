; This function is written purely in Cryptic Instruction and
; Is used to move back and forth to abritary locations in memory
; on run time, not on compile time.

def GET 1
def SET 2

; ga = operation (GET/SET)
; gb = location
; gc = value to set/get
k.mov:
	got ga
	inl "d^" ; Reserve for operation
	got gb
	inl "d^" ; reserve for location
	got gc
	inl "d^d" ; Reserve for value to set or value to get
	got WKSP
	inl "d" ; reserve for temp
	inl "d" ; reserve for label, set in loop (label)
	inl "!^d" ; store zero to compare (value1)
	inl "aaaaavddddd^" ; store value from fourth cell (value2)
	inl "aa" ; go back
	k.get_back:
		inl "a^d" ; store current cell temp
		inl "!+++^"; Go to label 3 (k.get_back.end)
		inl "avd" ; restore temp value
		inl "<"

		; to go matching register + 1, store temp,
		; sub matching register, return back
		inl "ddd^"
		inl "av-^dvaaa"
	inl "?" ; equ

	; Goto
	inl "a^d" ; store current cell temp
	inl "!++^"; Go to label 2 (k.get_back)
	inl "avd" ; restore temp value
	inl "$"

	k.get_back_end:
	; Store value.

	inl "a^" ; store temp
	inl "d!*-^" ; store label 4 (k.get_set)
	inl "d!+^" ; store 1
	inl "aaaaavdddddd^" ; store operation reg
	inl "aa" ; back to label
	inl "avd" ; restore value
	inl "?"

	; If operation is not 1 (2)
	inl "aavdd" ; set value
	k.get_set:
	; If operation is 1:
	inl "aa^dd" ; put char into value

	; Now we are currently in the label reg.
	; Go back to temp reg and store current memory cell.
	inl "a^d"

	inl "d" ; space for label
	inl "!^d" ; store zero to compare
	inl "aaaaavddddd^" ; store 4 to compare (matching register)
	inl "aa" ; go back
	inl "avd" ; Restore temp value
	k.get_forward:
		inl "a^d" ; store current cell temp
		inl "!*+^"; Go to label 5 (k.get_forward.back)
		inl "avd" ; restore temp value
		inl ">"

		; to go matching register + 1, store temp,
		; sub matching register, return back
		inl "ddd^"
		inl "av-^dvaaa"
	inl "?" ; equ

	; Goto
	inl "a^d" ; store current cell temp
	inl "!*^"; Go to label 4 (k.get_forward)
	inl "avd" ; restore temp value
	inl "$"
	k.get_forward_back:
	got gr
	inl "aavaaa" ; go to initial value, when started
ret
